/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_projects;

import com.github.sarxos.webcam.Webcam;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Abhishek
 */
public class UploadPhoto extends javax.swing.JFrame implements Runnable
{
    String usern,imgpathphoto,imgpathsign;
    boolean checkflag, saveflag;
    /**
     * Creates new form UploadPhoto
     */
    public UploadPhoto()
    {
        this.checkflag = true;
        this.saveflag = false;
        initComponents();
        displayIcon(btnsave,"F:\\JAVA\\AWT\\Java_Projects\\images\\save.png");
        displayIcon(btninsert,"F:\\JAVA\\AWT\\Java_Projects\\images\\insert-2.png");
        displayIcon(btnupdate,"F:\\JAVA\\AWT\\Java_Projects\\images\\upload-2.png");
        displayIcon(btndelete,"F:\\JAVA\\AWT\\Java_Projects\\images\\delete-1.png");
        displayIcon(btncam,"F:\\JAVA\\AWT\\Java_Projects\\images\\cam-1.png");
//      addWindowListener(new WindowClose(new MenuClass(usern)));
    }
    
    public UploadPhoto(String usern)
    {
        this.checkflag = true;
        this.saveflag = false;
        initComponents();
        displayIcon(btnsave,"F:\\Regal JAVA\\AWT & SWING\\Java_Projects\\images\\save.png");
        displayIcon(btninsert,"F:\\Regal JAVA\\AWT & SWING\\Java_Projects\\images\\insert-2.png");
        displayIcon(btnupdate,"F:\\Regal JAVA\\AWT & SWING\\Java_Projects\\images\\upload-2.png");
        displayIcon(btndelete,"F:\\Regal JAVA\\AWT & SWING\\Java_Projects\\images\\delete-1.png");
        displayIcon(btncam,"F:\\Regal JAVA\\AWT & SWING\\Java_Projects\\images\\cam-1.png");
        this.usern = usern;
        addWindowListener(new WindowClose(new MenuClass(usern)));
    }
    
    public void displayIcon(JButton lbl,String path)
    {
        ImageIcon ic = new ImageIcon(path);
        Image img = ic.getImage();
        Image newimg = img.getScaledInstance((lbl.getHeight() - 10), (lbl.getHeight() - 10), Image.SCALE_DEFAULT);
        ImageIcon im = new ImageIcon(newimg);
        lbl.setIcon(im);
    }
    
    public void displayImage(JLabel lbl,String path)
    {
        ImageIcon ic = new ImageIcon(path);
        Image img = ic.getImage();
        Image newimg = img.getScaledInstance(lbl.getWidth(), lbl.getHeight(), Image.SCALE_DEFAULT);
        ImageIcon im = new ImageIcon(newimg);
        lbl.setIcon(im);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnlframe = new javax.swing.JPanel();
        pnlpic = new javax.swing.JPanel();
        lblshowsign = new javax.swing.JLabel();
        lblshowphoto = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        btncam = new javax.swing.JButton();
        btnclickimage = new javax.swing.JButton();
        btnuploadsign = new javax.swing.JButton();
        btnuploadphoto = new javax.swing.JButton();
        btninsert = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        pnlframe.setBackground(new java.awt.Color(255, 204, 255));

        pnlpic.setBackground(new java.awt.Color(204, 204, 255));
        pnlpic.setPreferredSize(new java.awt.Dimension(650, 600));

        lblshowsign.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 51, 255)));

        lblshowphoto.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 51, 255)));

        btnsave.setBackground(new java.awt.Color(51, 255, 255));
        btnsave.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        btnsave.setForeground(new java.awt.Color(153, 51, 255));
        btnsave.setText("SAVE");
        btnsave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btnsave.setIconTextGap(20);
        btnsave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnsaveActionPerformed(evt);
            }
        });

        btncam.setBackground(new java.awt.Color(51, 255, 255));
        btncam.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btncam.setForeground(new java.awt.Color(153, 51, 255));
        btncam.setText("CAMERA");
        btncam.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btncam.setIconTextGap(20);
        btncam.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btncamActionPerformed(evt);
            }
        });

        btnclickimage.setBackground(new java.awt.Color(51, 255, 255));
        btnclickimage.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnclickimage.setForeground(new java.awt.Color(153, 51, 255));
        btnclickimage.setText("CAPTURE IMAGE");
        btnclickimage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btnclickimage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnclickimageActionPerformed(evt);
            }
        });

        btnuploadsign.setBackground(new java.awt.Color(51, 255, 255));
        btnuploadsign.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnuploadsign.setForeground(new java.awt.Color(153, 51, 255));
        btnuploadsign.setText("UPLOAD SIGNATURE");
        btnuploadsign.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btnuploadsign.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnuploadsignActionPerformed(evt);
            }
        });

        btnuploadphoto.setBackground(new java.awt.Color(51, 255, 255));
        btnuploadphoto.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnuploadphoto.setForeground(new java.awt.Color(153, 51, 255));
        btnuploadphoto.setText("UPLOAD PHOTO");
        btnuploadphoto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btnuploadphoto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnuploadphotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlpicLayout = new javax.swing.GroupLayout(pnlpic);
        pnlpic.setLayout(pnlpicLayout);
        pnlpicLayout.setHorizontalGroup(
            pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlpicLayout.createSequentialGroup()
                .addGroup(pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlpicLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlpicLayout.createSequentialGroup()
                                .addComponent(lblshowsign, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btnuploadsign, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                            .addGroup(pnlpicLayout.createSequentialGroup()
                                .addComponent(lblshowphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btncam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnclickimage, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(btnuploadphoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(pnlpicLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlpicLayout.setVerticalGroup(
            pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlpicLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlpicLayout.createSequentialGroup()
                        .addComponent(btncam, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnclickimage, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnuploadphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblshowphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlpicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlpicLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblshowsign, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlpicLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnuploadsign, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        btninsert.setBackground(new java.awt.Color(51, 255, 255));
        btninsert.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        btninsert.setForeground(new java.awt.Color(153, 51, 255));
        btninsert.setText("INSERT");
        btninsert.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btninsert.setIconTextGap(20);
        btninsert.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btninsertActionPerformed(evt);
            }
        });

        btnupdate.setBackground(new java.awt.Color(51, 255, 255));
        btnupdate.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(153, 51, 255));
        btnupdate.setText("UPDATE");
        btnupdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btnupdate.setIconTextGap(20);
        btnupdate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(51, 255, 255));
        btndelete.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        btndelete.setForeground(new java.awt.Color(153, 51, 255));
        btndelete.setText("DELETE");
        btndelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255), new java.awt.Color(153, 51, 255)));
        btndelete.setIconTextGap(20);
        btndelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btndeleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 51, 255));
        jLabel3.setText("UPLOAD YOUR PHOTO AND SIGNATURE");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 255)));

        javax.swing.GroupLayout pnlframeLayout = new javax.swing.GroupLayout(pnlframe);
        pnlframe.setLayout(pnlframeLayout);
        pnlframeLayout.setHorizontalGroup(
            pnlframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlframeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btninsert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(pnlpic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(pnlframeLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlframeLayout.setVerticalGroup(
            pnlframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlframeLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlframeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(pnlpic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(pnlframeLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btninsert, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlframe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlframe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnsaveActionPerformed
    {//GEN-HEADEREND:event_btnsaveActionPerformed
        if(saveflag == true)
        {
            int res;
            res = JOptionPane.showConfirmDialog(null, "You Wont be Able To Make Changes Further!","Are You Sure You Want to Exit?",JOptionPane.YES_NO_CANCEL_OPTION);
            if(res == JOptionPane.YES_OPTION)
            {
                new MenuClass(usern).setVisible(true);
                dispose();
                JOptionPane.showMessageDialog(null, "Photos Uploaded Successfully");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Insert Images First");
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btninsertActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btninsertActionPerformed
    {//GEN-HEADEREND:event_btninsertActionPerformed
        if(imgpathphoto == null & imgpathsign == null)
        {
            JOptionPane.showMessageDialog(null, "Please Upload Photo and Signature First");
        }
        else
        {
            if(flag1 == false)
            {
                String pth = String.format("F:\\Regal JAVA\\MY PIC\\pic%d.jpg",1);
                try
                {
                    ImageIO.write(wc.getImage(), "JPG", new File(pth));
                    FileInputStream fis = new FileInputStream(new File(pth));
                    InputStream fi = new FileInputStream(new File(imgpathsign));
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/database", "root", "root");
                    PreparedStatement pst = con.prepareStatement("Insert into database.photodata(user,photo,sign) values(?,?,?)");
                    pst.setString(1, usern);
                    pst.setBlob(2, fis);
                    pst.setBlob(3, fi);
                    if(pst.executeUpdate() == 1)
                    {
                        JOptionPane.showMessageDialog(null, "Inserted Successfully");
                        saveflag = true;
                        wc.close();
                    }
                }
                catch (IOException ex)
                {
                    //ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error "+ex);
                }
                catch (SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error " + ex);
                }
            }
            else
            {
                try
                {    
                    FileInputStream fis = new FileInputStream(new File(imgpathphoto));
                    InputStream fi = new FileInputStream(new File(imgpathsign));
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/database", "root", "root");
                    PreparedStatement pst = con.prepareStatement("Insert into database.photodata(user,photo,sign) values(?,?,?)");
                    pst.setString(1, usern);
                    pst.setBlob(2, fis);
                    pst.setBlob(3, fi);
                    if(pst.executeUpdate() == 1)
                    {
                        JOptionPane.showMessageDialog(null, "Inserted Successfully");
                        saveflag = true;
                    }
                }
                catch (IOException ex)
                {
                    //ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error "+ex);
                }
                catch (SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error " + ex);
                }
            }
            imgpathphoto = null;
            imgpathsign = null;
            lblshowphoto.setIcon(null);
            lblshowsign.setIcon(null);
        }
    }//GEN-LAST:event_btninsertActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnupdateActionPerformed
    {//GEN-HEADEREND:event_btnupdateActionPerformed
        if(imgpathphoto == null & imgpathsign == null)
        {
            JOptionPane.showMessageDialog(null, "Please Upload Photo and Signature First");
        }
        else
        {
            if(flag1 == false)
            {
                String pth = String.format("F:\\Regal JAVA\\MY PIC\\pic%d.jpg",1);
                try
                {
                    ImageIO.write(wc.getImage(), "JPG", new File(pth));
                    FileInputStream fis = new FileInputStream(new File(pth));
                    InputStream fi = new FileInputStream(new File(imgpathsign));
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/database", "root", "root");
                    PreparedStatement pst = con.prepareStatement("Update database.photodata set photo = ? ,sign = ? where user = '" + usern + "'");
                    pst.setBlob(1, fis);
                    pst.setBlob(2, fi);
                    if(pst.executeUpdate() == 1)
                    {
                        JOptionPane.showMessageDialog(null, "Updated Successfully");
                        saveflag = true;
                        wc.close();
                    }
                    else if(pst.executeUpdate() == 0)
                    {
                        JOptionPane.showMessageDialog(null, "File Already Updated or No File Exists!!(Please Insert File First)");
                    }
                }
                catch (IOException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error " + ex);
                    //ex.printStackTrace();
                }
                catch (SQLException ex)
                {    
                    JOptionPane.showMessageDialog(null, "Unable to Update " + ex);
                }
            }
            else
            {
                try
                { 
                    FileInputStream fis = new FileInputStream(new File(imgpathphoto));
                    InputStream fi = new FileInputStream(new File(imgpathsign));
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/database", "root", "root");
                    PreparedStatement pst = con.prepareStatement("Update database.photodata set photo = ? ,sign = ? where user = '" + usern + "'");
                    pst.setBlob(1, fis);
                    pst.setBlob(2, fi);
                    if(pst.executeUpdate() == 1)
                    {
                        JOptionPane.showMessageDialog(null, "Updated Successfully");
                        saveflag = true;
                    }
                    else if(pst.executeUpdate() == 0)
                    {
                        JOptionPane.showMessageDialog(null, "File Already Updated or No File Exists!!(Please Insert File First)");
                    }
                }
                catch (IOException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error " + ex);
                    //ex.printStackTrace();
                }
                catch (SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Unable to Update " + ex);
                }
            }
            imgpathphoto = null;
            imgpathsign = null;
            lblshowphoto.setIcon(null);
            lblshowsign.setIcon(null);
        }
        
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btndeleteActionPerformed
    {//GEN-HEADEREND:event_btndeleteActionPerformed
        try
        {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/database", "root", "root");
            PreparedStatement pst = con.prepareStatement("Delete from database.photodata where user = '" + usern + "'");
            if(pst.executeUpdate() == 1)
            {
                JOptionPane.showMessageDialog(null, "Deleted Successfully");
                saveflag = false;
            }
            else if(pst.executeUpdate() == 0)
            {
                JOptionPane.showMessageDialog(null, "File Already Deleted or does not exist");
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Unable to Delete");
        }  
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btncamActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btncamActionPerformed
    {//GEN-HEADEREND:event_btncamActionPerformed
        checkflag = false;
        flag1 = true;
        new Thread(this).start();
    }//GEN-LAST:event_btncamActionPerformed

    private void btnclickimageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnclickimageActionPerformed
    {//GEN-HEADEREND:event_btnclickimageActionPerformed
        if(checkflag == false)
        {
            flag1 = false;
        }
    }//GEN-LAST:event_btnclickimageActionPerformed

    private void btnuploadsignActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnuploadsignActionPerformed
    {//GEN-HEADEREND:event_btnuploadsignActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            displayImage(lblshowsign, path);
            imgpathsign = path ;
        }
        else if(result == JFileChooser.CANCEL_OPTION)
        {
            JOptionPane.showMessageDialog(null,"No File Selected");
        }
    }//GEN-LAST:event_btnuploadsignActionPerformed

    private void btnuploadphotoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnuploadphotoActionPerformed
    {//GEN-HEADEREND:event_btnuploadphotoActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            displayImage(lblshowphoto, path);
            imgpathphoto = path ;
            checkflag = true;
            flag1 = true;
        }
        else if(result == JFileChooser.CANCEL_OPTION)
        {
            JOptionPane.showMessageDialog(null,"No File Selected");
        } 
    }//GEN-LAST:event_btnuploadphotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(UploadPhoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(UploadPhoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(UploadPhoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(UploadPhoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new UploadPhoto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncam;
    private javax.swing.JButton btnclickimage;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btninsert;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnuploadphoto;
    private javax.swing.JButton btnuploadsign;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblshowphoto;
    private javax.swing.JLabel lblshowsign;
    private javax.swing.JPanel pnlframe;
    private javax.swing.JPanel pnlpic;
    // End of variables declaration//GEN-END:variables
    
    Webcam wc;
    boolean flag1 = true;
    public void run()
    {
        wc = Webcam.getDefault();
        wc.open();
        while(flag1)
        {
            Image img = wc.getImage();
            img = img.getScaledInstance(lblshowphoto.getWidth(), lblshowphoto.getHeight(), Image.SCALE_SMOOTH);
            lblshowphoto.setIcon(new ImageIcon(img));
            try
            {
                Thread.sleep(20);
            }
            catch(InterruptedException e)
            {
            }
        }
    }
    
    class WindowClose extends WindowAdapter
    {
        Frame obj;
        public WindowClose(Frame f)
        {
            obj = f;
        }
        @Override
        public void windowClosing(WindowEvent e)
        {
            int res = JOptionPane.showConfirmDialog(null, "Are You Sure You Want To Close?", "Close Window", JOptionPane.YES_NO_CANCEL_OPTION);
            if(res == JOptionPane.YES_OPTION)
            {
                flag1 = false;
                Window w = e.getWindow();
                obj.setVisible(true);
                w.dispose();
                wc.close();
            }
        }
    }
}

